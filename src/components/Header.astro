---
const { currentPage = 'home' } = Astro.props;
const base = import.meta.env.BASE_URL;

const menuItems = [
  { name: '홈', url: '', id: 'home' },
  { name: '소개', url: 'about', id: 'about' },
  { name: '모임 일정', url: 'schedule', id: 'schedule' },
  { name: '수상내역', url: 'awards', id: 'awards' },
  { name: '통계', url: 'stats', id: 'stats' },
];
---

<header class="sticky top-0 z-50 bg-white shadow-md">
  <div class="max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8 py-3 flex justify-between items-center">
    <div class="logo">
      <h1 class="text-2xl font-bold text-primary">
        <a href={base} class="hover:opacity-80 transition-opacity">청구회</a>
      </h1>
    </div>
    
    <nav class="hidden md:block">
      <ul class="flex gap-6">
        {menuItems.map(item => (
          <li>
            <a 
              href={`${base}${item.url}`} 
              class={`relative py-2 hover:text-primary transition-colors ${currentPage === item.id ? 'text-primary font-medium after:absolute after:bottom-0 after:left-0 after:w-full after:h-0.5 after:bg-primary' : 'text-gray-700'}`}
            >
              {item.name}
            </a>
          </li>
        ))}
        <li id="adminMenu" class="hidden">
          <a 
            href={`${base}admin`} 
            class="relative py-2 text-yellow-600 hover:text-yellow-700 transition-colors font-medium"
          >
            관리자
          </a>
        </li>
      </ul>
    </nav>
    
    <div class="hidden md:block">
      <div id="userSection">
        <a href={`${base}login`} id="loginBtn" class="text-gray-700 hover:text-primary transition-colors">로그인</a>
      </div>
    </div>
    
    <button class="md:hidden hamburger-menu">
      <span class="block w-6 h-0.5 bg-gray-700 mb-1.5"></span>
      <span class="block w-6 h-0.5 bg-gray-700 mb-1.5"></span>
      <span class="block w-6 h-0.5 bg-gray-700"></span>
    </button>
  </div>

  <!-- 모바일 메뉴 -->
  <div class="mobile-menu hidden md:hidden">
    <div class="max-w-screen-xl mx-auto">
      <ul class="py-4 px-4 bg-white border-t">
        {menuItems.map(item => (
          <li class="mb-2">
            <a 
              href={`${base}${item.url}`} 
              class={`block py-2 px-4 ${currentPage === item.id ? 'text-primary font-medium bg-gray-50' : 'text-gray-700'}`}
            >
              {item.name}
            </a>
          </li>
        ))}
        <li id="mobileAdminMenu" class="mb-2 hidden">
          <a href={`${base}admin`} class="block py-2 px-4 text-yellow-600 font-medium">관리자</a>
        </li>
        <li id="mobileLoginSection">
          <a href={`${base}login`} class="block py-2 px-4 text-gray-700">로그인</a>
        </li>
      </ul>
    </div>
  </div>
</header>

<script>
  // 햄버거 메뉴 토글
  const hamburger = document.querySelector('.hamburger-menu');
  const mobileMenu = document.querySelector('.mobile-menu');
  
  if (hamburger && mobileMenu) {
    hamburger.addEventListener('click', () => {
      mobileMenu.classList.toggle('hidden');
    });
  }
  
  // 로그인 상태 확인
  const userJson = sessionStorage.getItem('user');
  const user = userJson ? JSON.parse(userJson) : null;
  
  if (user) {
    // 데스크톱 메뉴 업데이트
    const userSection = document.getElementById('userSection');
    if (userSection) {
      userSection.innerHTML = `
        <div class="flex items-center gap-3">
          <span class="text-gray-700">${user.displayName || user.email}</span>
          <button id="logoutBtn" class="text-red-600 hover:text-red-700 transition-colors">로그아웃</button>
        </div>
      `;
    }
    
    // 모바일 메뉴 업데이트
    const mobileLoginSection = document.getElementById('mobileLoginSection');
    if (mobileLoginSection) {
      mobileLoginSection.innerHTML = `
        <div class="block py-2 px-4">
          <span class="text-gray-700 block">${user.displayName || user.email}</span>
          <button id="mobileLogoutBtn" class="text-red-600 hover:text-red-700 mt-1">로그아웃</button>
        </div>
      `;
    }
    
    // 관리자 메뉴 표시
    if (user.isAdmin) {
      const adminMenu = document.getElementById('adminMenu');
      if (adminMenu) adminMenu.classList.remove('hidden');
      
      const mobileAdminMenu = document.getElementById('mobileAdminMenu');
      if (mobileAdminMenu) mobileAdminMenu.classList.remove('hidden');
    }
    
    // 로그아웃 이벤트 리스너
    const logoutBtn = document.getElementById('logoutBtn');
    if (logoutBtn) {
      logoutBtn.addEventListener('click', () => {
        sessionStorage.removeItem('user');
        window.location.reload();
      });
    }
    
    const mobileLogoutBtn = document.getElementById('mobileLogoutBtn');
    if (mobileLogoutBtn) {
      mobileLogoutBtn.addEventListener('click', () => {
        sessionStorage.removeItem('user');
        window.location.reload();
      });
    }
  }
</script>
